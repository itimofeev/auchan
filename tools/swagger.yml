---
consumes:
- "application/json"
produces:
- "application/json"
schemes:
- "http"
swagger: "2.0"

info:
  description: |
    This is a server for collaborative shopping.
  version: 1.0.0
  title: CityProject for Auchan
host: aeuchan.swagger.io
basePath: /v1
tags:
- name: user
  description: Operations about user
- name: basket
  description: Operations about basket of goods
- name: product
  description: Operations about products
- name: goods
  description: Operations about goods (product added to the basket with price and quantity)
- name: share
  description: Operations about share of basket with somebody

paths:
  /hello:
    get:
      summary: just hello
      operationId: hello
      responses:
        200:
          schema:
            type: string
          description: hello message
  
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
      - name: email
        in: query
        description: The user email for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
      responses:
        200:
          description: OK
          headers:
            X-Auth-Token:
              type: string
              description: token to pass in every request to user auth
        401:
          description: Invalid username/password supplied

  /user:
    get:
      tags:
      - user
      security:
        - AuthToken: []
      summary: Returns current user
      operationId: getCurrentUser
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'

  /product:
    get:
      tags: 
      - product
      summary: search for products
      operationId: getProductsByParams
      parameters:
      - name: name
        in: query
        description: The name that needs to be fetched.
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items: 
              $ref: '#/definitions/Product'
        404:
          description: Not found
          
  /basket:
    put:
      tags:
      - basket
      summary: create basket
      security:
        - AuthToken: []
      operationId: createBasket
      parameters:
      - name: "basket"
        in: "body"
        schema:
          type: object
          required:
            - name
          properties:
            name: 
              type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Basket'
        404:
          description: Not found
    get:
      tags:
      - basket
      security:
        - AuthToken: []
      summary: get all users baskets
      operationId: getAllBaskets
      responses:
        200:
          description: returns all available baskets
          schema:
            type: array
            items:
              $ref: '#/definitions/Basket'
  
  /basket/{basketId}/share:
    post:
      tags:
      - share
      security:
        - AuthToken: []      
      summary: add user to share
      operationId: addUserToShare
      parameters:
      - name: "basketId"
        type: integer
        format: int64
        in: "path"
        required: true
      - name: "share"
        in: "body"
        schema:
          type: object
          required:
            - email
          properties:
            email: 
              type: string
      responses:
        200:
          description: returns created share
          schema:
            $ref: '#/definitions/Share'
             
    get:
      tags:
      - share
      security:
        - AuthToken: []      
      summary: get all shares for basket
      operationId: getAllSharesForBasket
      parameters:
      - name: basketId
        type: integer
        format: int64
        in: "path"
        required: true
      responses:
        200:
          description: returns created share
          schema:
            type: array
            items:
              $ref: '#/definitions/Share'
             
  /basket/{basketId}/goods:
    post:
      summary: change goods quantity in basket
      operationId: addGoodsToBasket
      tags: 
      - goods    
      security:
        - AuthToken: []
      parameters:
      - name: basketId
        type: integer
        format: int64
        in: path
        required: true
      - name: goods
        in: body
        schema:
          type: object
          required:
            - name
          properties:
            productId: 
              type: integer
              format: int64
            quantity:
              type: integer
              format: int64
      responses:
        200:
          description: returns current state of goods
          schema:
            $ref: '#/definitions/Goods'
        404:
          description: product or basket not found
    get:
      summary: return all goods in basket
      operationId: getAllGoodsInBasket
      tags: 
      - goods
      security:
        - AuthToken: []      
      parameters:
      - name: basketId
        type: integer
        format: int64
        in: "path"
        required: true
      responses:
        200:
          description: returns goods in basket
          schema:
            type: array
            items:
              $ref: '#/definitions/Goods'
                        
securityDefinitions:
  AuthToken:
    type: apiKey
    in: header
    name: X-Auth-Token
    
definitions:
  
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      email:
        type: string

  Product:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      imageUrl:
        type: string  
      categoryName:
        type: string

  Basket:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  
  Share:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
        
  Goods:
    type: object
    properties:
      id:
        type: integer
        format: int64
      product:
        $ref: '#/definitions/Product'
      user:
        $ref: '#/definitions/User'
      completed:
        type: boolean
      quantity:
        type: integer
      price:
        type: integer
      unit:
        type: string